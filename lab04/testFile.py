# Laila Bahman

from lab04 import solveMaze
from lab04 import printMaze
from Stack import Stack


def test_example():
	maze = [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+']]
	assert solveMaze(maze, 4, 4) == True
	assert maze == [
['+', '+', '+', '+', 'G', '+'],
['+', 8, '+', 11, 12, '+'],
['+', 7, 9, 10, '+', '+'],
['+', 6, '+', '+', 2, '+'],
['+', 5, 4, 3, 1, '+'],
['+', '+', '+', '+', '+', '+']]

def test_noSolution():
    maze2 = [
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['G','+','+','+','+','+'],
['+','+','+','+','+','+']]
    assert solveMaze(maze2, 3, 4) == False
    assert maze2 == [
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+',1,'+'],
['G','+','+','+','+','+'],
['+','+','+','+','+','+']]


def test_openSpace():
    maze3 = [
['+','+','+','+','+','+'],
['+',' ','G',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+']]
    assert solveMaze(maze3, 4, 4) == True
    assert maze3 == [
['+','+','+','+','+','+'],
['+',9,'G',5,4,'+'],
['+',8,7,6,3,'+'],
['+',' ',' ',' ',2,'+'],
['+',' ',' ',' ',1,'+'],
['+','+','+','+','+','+']]


def test_straightForward():
    maze4 = [
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+',' ',' ',' ',' ','G'],
['+','+','+','+','+','+']]
    assert solveMaze(maze4, 4, 1) == True
    assert maze4 == [
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+','+','+','+','+','+'],
['+',1,2,3,4,'G'],
['+','+','+','+','+','+']]


